---
title: "TL1a vs. TNFa Phosphoproteomics"
author: "Alex Panov"
format: 
  html:
    embed-resources: true
    code-fold: true
    code-summary: "Show code"
    toc: true
    toc-depth: 4
    df-print: paged
editor: visual
execute: 
  warning: false
---

#### 1. Data Loading, Wrangling

```{r}
## AP04_TL1a AP

setwd("~/Library/CloudStorage/OneDrive-Pfizer/projects/AP04_TL1a_phospho")
df_control <- read.table("./tl1a/output/tl1a_tnfa_followup/tl1a_tnfa_phosphoproteomics_dea.txt", sep = "\t", na.strings = c("NULL", "NaN", "NA"), header = T)
# df_compare <- read.table("./tl1a/output/tl1a_tnfa_followup/tl1a_tnfa_phosphoproteomics_dea_tl1a_vs_tnfa.txt", sep = "\t", na.strings = c("NULL", "NaN", "NA"), header = T)

library(ggplot2)
library(plotly)
library(ggrepel)
library(stringr)
# library(UniProt.ws)

## Some notes about the experiment. 50 ng/mL and 100 ng/mL TNFa, which is 1.95 nM and 3.9 nM, respectively. We want to compare 20 and 200 nM TL1a to 50 ng TNFa, or tla1_high and tl1a_med vs. tnfa_low

## let's add the normalized values before LogFC for later plots.
df_control$norm_ratio_control <- 2^(df_control$logfc)

## reshape to long format for ggplot
df_control_corr <- df_control[,c("id", "id_prot", "gene_symbol", "ptm_sites", "contrast","logfc", "norm_ratio_control","logfc_se", "pval", "padj", "t")]
df_control_corr <- reshape(df_control_corr, idvar = c("id"), timevar = "contrast", direction = "wide")

df_control_corr <- df_control_corr[,c("id", "id_prot.tl1a_000_2nM", "gene_symbol.tl1a_000_2nM", "ptm_sites.tl1a_000_2nM", "logfc.tl1a_000_2nM","norm_ratio_control.tl1a_000_2nM", "logfc_se.tl1a_000_2nM", "pval.tl1a_000_2nM", "padj.tl1a_000_2nM", "t.tl1a_000_2nM",  "logfc.tl1a_020nM", "norm_ratio_control.tl1a_020nM","logfc_se.tl1a_020nM", "pval.tl1a_020nM", "padj.tl1a_020nM", "t.tl1a_020nM",  "logfc.tl1a_200nM", "norm_ratio_control.tl1a_200nM","logfc_se.tl1a_200nM", "pval.tl1a_200nM", "padj.tl1a_200nM", "t.tl1a_200nM",  "logfc.tnfa_050_ng_ml", "norm_ratio_control.tnfa_050_ng_ml","logfc_se.tnfa_050_ng_ml", "pval.tnfa_050_ng_ml", "padj.tnfa_050_ng_ml", "t.tnfa_050_ng_ml", "logfc.tnfa_100_ng_ml", "norm_ratio_control.tnfa_100_ng_ml", "logfc_se.tnfa_100_ng_ml", "pval.tnfa_100_ng_ml", "padj.tnfa_100_ng_ml", "t.tnfa_100_ng_ml")]


## norm_ratio_control cols are the treatment/control fold-change. So now we need to take Tl1A norm_ratio_control over TNFa norm_ratio_control
## adding in norm_ratio_control_med and _high
df_control_corr$norm_ratio_med <- df_control_corr$norm_ratio_control.tl1a_020nM/df_control_corr$norm_ratio_control.tnfa_050_ng_ml
df_control_corr$norm_ratio_high <- df_control_corr$norm_ratio_control.tl1a_200nM/df_control_corr$norm_ratio_control.tnfa_050_ng_ml
## THESE are the ratios we care about
## Let's also make a little less abstracted by making the ratios <1 into "negative" fold changes
# df_control$norm_ratio_control <- ifelse(df_control$norm_ratio_control < 1, -(1/df_control$norm_ratio_control), df_control$norm_ratio_control)
df_control_corr$norm_ratio_med_abs <- ifelse(df_control_corr$norm_ratio_med < 1, -(1/df_control_corr$norm_ratio_med), df_control_corr$norm_ratio_med)
df_control_corr$norm_ratio_high_abs <- ifelse(df_control_corr$norm_ratio_high < 1, -(1/df_control_corr$norm_ratio_high), df_control_corr$norm_ratio_high)


## add a significance threshold
alpha <- 0.05
df_control_corr$significance_med <- ifelse(df_control_corr$padj.tl1a_020nM < alpha & df_control_corr$padj.tnfa_050_ng_ml < alpha, "yes", "no")
df_control_corr$significance_high <- ifelse(df_control_corr$padj.tl1a_200nM < alpha & df_control_corr$padj.tnfa_050_ng_ml < alpha, "yes", "no")

## add significance thresholds for colors in plots below based on norm_ratio_med_abs and norm_ratio_high_abs. Let's start strictly with 2 fold change in either direction.
## ratio of 2 leaves maybe 1 single site. Let's drop to 50%? 25%?!
fc_cutoff <- 1.25
## required: fc_cutoff, alpha level, AND the ratio sign must agree with the logfc. For example: if we see an increase in a TL1a site after treatment compared to control, if the ratio is also positive, this means that the TL1a stimulates the site that much more as compared to TNFa. If the ratio is negative, it means TNFa stimualtes the site more. 
df_control_corr$fc_cutoff_med <- ifelse(abs(df_control_corr$norm_ratio_med_abs) > fc_cutoff & df_control_corr$padj.tl1a_020nM < alpha & sign(df_control_corr$logfc.tl1a_020nM)==sign(df_control_corr$norm_ratio_med_abs), "yes", "no" )
df_control_corr$fc_cutoff_high <- ifelse(abs(df_control_corr$norm_ratio_high_abs) > fc_cutoff & df_control_corr$padj.tl1a_200nM < alpha & sign(df_control_corr$logfc.tl1a_200nM)==sign(df_control_corr$norm_ratio_high_abs), "yes", "no" )
df_control_corr$fc_cutoff_both <- ifelse(df_control_corr$fc_cutoff_med == "yes" & df_control_corr$fc_cutoff_high == "yes", "yes", "no")
```

#### 2. Volcano plots for each condition

```{r}
global_plot_tl1a_med <- ggplot(data = df_control_corr, aes(x = logfc.tl1a_020nM, y = -log10(padj.tl1a_020nM), color = logfc.tl1a_020nM, text=sprintf(
    "Protein: %s<br>Site: %s<br>Ratio: %s<br>LogFC: %s<br>-log10(pval): %s", 
    gene_symbol.tl1a_000_2nM, 
    ptm_sites.tl1a_000_2nM, 
    round(norm_ratio_med_abs,2),
    round(logfc.tl1a_020nM, 2),
    round(-log10(padj.tl1a_020nM),2)
    ))) +
  geom_point(alpha = 0.5) +
  scale_color_viridis_c(begin = 0.1, end = 0.9, option = "magma") +
  # geom_hline(yintercept= -log10(alpha), linetype = "dashed", alpha = 0.2) +
  labs(color = "Log2FC(TL1a 20nM/control)") +
  xlab("Log2FC(TL1a/control)") +
  ylab("-log10(pval)") +
  ggtitle("Tl1a 20nM compared to control")+
  xlim(-2.75,2.75) +
  ylim(0,12)

ggplotly(global_plot_tl1a_med, tooltip = c("text"))


global_plot_tl1a_high <- ggplot(data = df_control_corr, aes(x = logfc.tl1a_200nM, y = -log10(padj.tl1a_200nM), color = logfc.tl1a_200nM, text=sprintf(
    "Protein: %s<br>Site: %s<br>Ratio: %s<br>LogFC: %s<br>-log10(pval): %s", 
    gene_symbol.tl1a_000_2nM, 
    ptm_sites.tl1a_000_2nM, 
    round(norm_ratio_high_abs,2),
    round(logfc.tl1a_200nM, 2),
    round(-log10(padj.tl1a_200nM),2)
    ))) +
  geom_point(alpha = 0.5) +
  scale_color_viridis_c(begin = 0.1, end = 0.9, option = "magma") +
  # geom_hline(yintercept= -log10(alpha), linetype = "dashed", alpha = 0.2) +
  labs(color = "Log2FC(TL1a 200nM/control)") +
  xlab("Log2FC(TL1a/control)") +
  ylab("-log10(pval)") +
  ggtitle("Tl1a 200nM compared to control")+
  xlim(-2.75,2.75) +
  ylim(0,12)


ggplotly(global_plot_tl1a_high, tooltip = c("text"))


global_plot_tnfa_low <- ggplot(data = df_control_corr, aes(x = logfc.tnfa_050_ng_ml, y = -log10(padj.tnfa_050_ng_ml), color = logfc.tnfa_050_ng_ml, text=sprintf(
    "Protein: %s<br>Site: %s<br>Ratio: %s<br>LogFC: %s<br>-log10(pval): %s", 
    gene_symbol.tl1a_000_2nM, 
    ptm_sites.tl1a_000_2nM, 
    "not calculated",
    round(logfc.tnfa_050_ng_ml, 2),
    round(-log10(padj.tnfa_050_ng_ml),2)
    ))) +
  geom_point(alpha = 0.5) +
  scale_color_viridis_c(begin = 0.1, end = 0.9, option = "magma") +
  # geom_hline(yintercept= -log10(alpha), linetype = "dashed", alpha = 0.2) +
  labs(color = "Log2FC(TNFa 50ng/mL/control)") +
  xlab("Log2FC(TNFa/control)") +
  ylab("-log10(pval)") +
  ggtitle("TNFa 50ng/mL compared to control")+
  xlim(-2.75,2.75) +
  ylim(0,12)


ggplotly(global_plot_tnfa_low, tooltip = c("text"))


global_plot_tnfa_high <- ggplot(data = df_control_corr, aes(x = logfc.tnfa_100_ng_ml, y = -log10(padj.tnfa_100_ng_ml), color = logfc.tnfa_100_ng_ml, text=sprintf(
    "Protein: %s<br>Site: %s<br>Ratio: %s<br>LogFC: %s<br>-log10(pval): %s", 
    gene_symbol.tl1a_000_2nM, 
    ptm_sites.tl1a_000_2nM, 
    "not calculated",
    round(logfc.tnfa_100_ng_ml, 2),
    round(-log10(padj.tnfa_100_ng_ml),2)
    ))) +
  geom_point(alpha = 0.5) +
  scale_color_viridis_c(begin = 0.1, end = 0.9, option = "magma") +
  # geom_hline(yintercept= -log10(alpha), linetype = "dashed", alpha = 0.2) +
  labs(color = "Log2FC(TNFa 100ng/mL/control)") +
  xlab("Log2FC(TNFa/control)") +
  ylab("-log10(pval)") +
  ggtitle("TNFa 100ng/mL compared to control")+
  xlim(-2.75,2.75) +
  ylim(0,12)


ggplotly(global_plot_tnfa_low, tooltip = c("text"))
```
